# # Javaアプリケーションのビルド
# ## 前提とする言語、環境など
# * Java
# * Maven
# * jacoco
# * CheckStyle
# * SpotBugs
# ## 未対応事項
# * 静的解析
# * カバレッジ計測
name: Build Java Application

on:
  workflow_call:
    inputs:
      app-name:
        description: アプリケーション名
        required: true
        type: string
      app-version:
        description: アプリケーションバージョン
        required: true
        type: string
      work-directory:
        description: 作業ディレクトリ（アプリのルートフォルダ）
        required: true
        type: string
      dist-directory:
        description: ビルドリソースの生成されるフォルダー
        required: false
        type: string
        default: target
      java-version:
        description: Javaのバージョン
        required: true
        type: string
      test-report-cache-key:
        description: テストレポートのキャッシュキー名
        required: true
        type: string
      build-artifacts-cache-key:
        description: ビルドしたアーティファクトのキャッシュキー名
        required: true
        type: string
      pr-comment-cache-key:
        description: PRコメントファイルのキャッシュキー名
        required: true
        type: string
      pr-comment-folder-name:
        description: PRへのフィードバックコメントファイルの格納先フォルダー名
        required: true
        type: string
      pr-comment-file-name:
        description: PRへのフィードバックコメントファイル名
        required: true
        type: string
      is-publish:
        description: Jar,イメージの公開有無(true:公開する、false:公開しない)
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
          #Tips: defaults > run > working-directoryの設定はActionへの引数には適用されません
          working-directory: ${{ inputs.work-directory }}
    env:
      pr-comment-directory: ${{ inputs.work-directory }}/${{ inputs.pr-comment-folder-name }}
      test-report-directory_built: ${{ inputs.dist-directory }}/reports
      test-report-directory_for_transport-to-pages: pages/${{ inputs.app-name }}/reports
      test-report-directory_for_pages: ${{ inputs.app-name }}/reports
      coverage-tool-name: jacoco
      style-check-tool-name: checkstyle
      bug-check-tool-name: spotbugs
    steps:
      # 実行環境セットアップ
      ## コードをチェックアウト
      - name: checkout source
        uses: actions/checkout@v5
      ## JDK をセットアップ
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      ## キャッシュ（Mavenリポジトリ）
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      ## GitHub Packagesへの認証設定追加（Maven）
      - name: Generate Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.GITHUB_TOKEN }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml
      ## 後続プロセスで使用するディレクトリの初期化
      - run: |
          mkdir -p ${{ inputs.pr-comment-folder-name }}
          mkdir -p ${{ env.test-report-directory_for_transport-to-pages }}
      ## 編集を伴う変数定義
      - name: variable settings
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          PAGES_URL="https://${{ github.repository_owner }}.github.io/$REPO_NAME"
          TEST_REPORT_ROOT_URL="$PAGES_URL/${{ env.test-report-directory_for_pages }}"

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "PAGES_URL=$PAGES_URL" >> $GITHUB_ENV
          echo "TEST_REPORT_ROOT_URL=$TEST_REPORT_ROOT_URL" >> $GITHUB_ENV
      ## PRコメントダウンロード
      ## * PRコメントがある場合、加筆するためダウンロード。
      ## * ファイルが存在しなくてもエラーにしない
      - name: Download pr-comment
        uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.pr-comment-cache-key }}
          path: ${{ env.pr-comment-directory }}
        continue-on-error: true
      ## PRコメント
      - name: PR comment
        if: ${{ github.event.pull_request.number != '' }}
        run: |
          ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "
            # Backend(Java) build workflowからのフィードバック
            * ワークフローごとに保存しているテスト結果は[こちら]($ARTIFACT_URL)　※GitHubの設定期間保持されます（デフォルト：90日）  
            " >> ${{ inputs.pr-comment-folder-name }}/${{ inputs.pr-comment-file-name }}

      # ビルド
      - name: build
        run: mvn compile

      # 静的解析
      ## 静的解析実行
      - name: Static analysis
        run: mvn checkstyle:checkstyle spotbugs:spotbugs
      ## 静的解析レポートのアップロード（レポート公開向けの一時保存）
      - name: move static analysis report
        run: |
          mv ${{ env.test-report-directory_built }}/${{ env.style-check-tool-name }}/checkstyle.html ${{ env.test-report-directory_built }}/${{ env.style-check-tool-name }}/index.html
          mv ${{ env.test-report-directory_built }}/${{ env.style-check-tool-name }} ${{ env.test-report-directory_for_transport-to-pages }}
          mv ${{ env.test-report-directory_built }}/${{ env.bug-check-tool-name }}/spotbugs.html ${{ env.test-report-directory_built }}/${{ env.bug-check-tool-name }}/index.html
          mv ${{ env.test-report-directory_built }}/${{ env.bug-check-tool-name }} ${{ env.test-report-directory_for_transport-to-pages }}
      - name: Upload Test Report
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.test-report-cache-key }}
          path: ${{ inputs.work-directory }}/pages
      ## PRコメント
      - name: PR comment
        if: ${{ github.event.pull_request.number != '' }}
        run: |
          CODE_STYLE_REPORT_URL="$TEST_REPORT_ROOT_URL/${{ env.style-check-tool-name }}/index.html"
          CODE_BUG_REPORT_URL="$TEST_REPORT_ROOT_URL/${{ env.bug-check-tool-name }}/index.html"
          
          echo "
            ## 静的解析結果のフィードバック  
            * コードスタイルレポートのプレビューは[こちら]($CODE_STYLE_REPORT_URL)　※ワークフローが動くと上書きされます  
            * 潜在バグレポートのプレビューは[こちら]($CODE_BUG_REPORT_URL)　※ワークフローが動くと上書きされます  
            " >> ${{ inputs.pr-comment-folder-name }}/${{ inputs.pr-comment-file-name }}
      ## PRコメントアップロード
      - name: Upload pr-comment
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.pr-comment-cache-key }}
          path: ${{ env.pr-comment-directory }}
          overwrite: true
      ## 静的解析結果の解析
      ## * CheckStyleでWaningまたはErrorが検出されていた場合、ワークフローを中断する
      ## * SpotBugsでbugが検出されていた場合、ワークフローを中断する
      - name: Check for Warnings and Errors
        run: |
          if grep -q "<error" ${{ inputs.work-directory }}/checkstyle-result.xml || \
             grep -q "<BugInstance" ${{ inputs.work-directory }}/spotbugsXml.xml; then
            echo "静的解析でエラーまたは警告が検出されたため、ワークフローを中断します。"
            exit 1
          fi      

      # テスト、パッケージ（Maven）
      - name: Build with Maven
        run: mvn install jacoco:report surefire-report:report-only
      ## アーティファクトのアップロード（イメージビルド向けの一時保存）
      - name: Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.build-artifacts-cache-key }}
          path: ${{ inputs.work-directory }}/${{ inputs.dist-directory }}/${{ inputs.app-name }}-${{ inputs.app-version }}.jar
      ## テストレポートのアップロード（レポート公開向けの一時保存）
      - name: move test report
        run: |
          mv ${{ env.test-report-directory_built }}/${{ env.coverage-tool-name }} ${{ env.test-report-directory_for_transport-to-pages }}
          mv ${{ env.test-report-directory_built }}/test/surefire.html ${{ env.test-report-directory_built }}/test/index.html
          mv ${{ env.test-report-directory_built }}/test ${{ env.test-report-directory_for_transport-to-pages }}
      - name: Upload Test Report
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.test-report-cache-key }}
          path: ${{ inputs.work-directory }}/pages
          overwrite: true
      - name: PR comment
        if: ${{ github.event.pull_request.number != '' }}
        run: |
          COVERAGE_REPORT_URL="$TEST_REPORT_ROOT_URL/${{ env.coverage-tool-name }}/index.html"
          TEST_REPORT_URL="$TEST_REPORT_ROOT_URL/test/index.html"
          
          echo "
            ## テスト結果のフィードバック  
            * カバレッジレポートのプレビューは[こちら]($COVERAGE_REPORT_URL)　※ワークフローが動くと上書きされます  
            * テスト結果レポートのプレビューは[こちら]($TEST_REPORT_URL)　※ワークフローが動くと上書きされます  
            " >> ${{ inputs.pr-comment-folder-name }}/${{ inputs.pr-comment-file-name }}
  
      # アーティファクト公開（公開先：GitHub Packages）
      - name: Publish artifact to GitHub Packages
        if: inputs.is-publish
        id: publish-artifact-to-packages
        run: mvn deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true #リポジトリがimmutableの場合、同一バージョンのpushはできないため、エラー無視
      ## アーティファクト公開コールバック
      - name: callback to console
        if: steps.publish-artifact-to-packages.outcome == 'failure'
        run: echo 同一バージョンのパッケージはプッシュできません。バージョンを変えるか、同一バージョンのパッケージを削除してリトライしてください。
      - name: callback to PR
        if: ${{ steps.publish-artifact-to-packages.outcome == 'failure' && github.event.pull_request.number != '' }}
        run: |
          echo "
            ## パッケージプッシュのフィードバック  
            * 同一バージョンのパッケージはプッシュできません。バージョンを変えるか、同一バージョンのパッケージを削除してリトライしてください。
            " >> ${{ inputs.pr-comment-folder-name }}/${{ inputs.pr-comment-file-name }}

      # PRコメントアップロード
      - name: Upload pr-comment
        uses: actions/upload-artifact@v5
        with:
          name: ${{ inputs.pr-comment-cache-key }}
          path: ${{ env.pr-comment-directory }}
          overwrite: true
