# java21, maven
name: CI/CD java application

env:
  APP_NAME: order
  APP_VERSION: 0.0.1
  AWS_REGION: ap-northeast-1

on:
  push:
    branches: 
      - 'feature/**'
    paths: 
      - 'order/**'
      - '.github/workflows/**' # ワークフロー自体の更新もトリガー
  pull_request:
    branches: 
      - 'develop/**'
    paths: 
      - 'order/**'
      - '.github/workflows/**' # ワークフロー自体の更新もトリガー

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'build-ts.yml')" #TSのワークフロー変更では動かないように制御
    runs-on: ubuntu-latest
    steps:
      # コードをチェックアウト
      - uses: actions/checkout@v3
      # JDK をセットアップ
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      # Mavanリポジトリのキャッシュ
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # MavenにGitHub Packagesへの認証設定追加
      - name: Generate Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.GITHUB_TOKEN }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml
      # Mavenでビルドし、jarファイルを生成
      - name: Build with Maven
        working-directory: ./order
        run: |
          mvn clean install
          mvn surefire-report:report-only
      # テストレポートのアップロード
      - name: Upload Test Report
        uses: actions/upload-pages-artifact@v1
        with:
          path: order/target/reports
      # Publish to GitHub Packages
      - name: Publish artifact to GitHub Packages
        working-directory: ./order
        run: mvn deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # イメージビルド、スキャン、公開
  build-image:
    needs: build
    uses: ./.github/workflows/build-image.yaml
    with:
      app-name: order
      app-version: 0.0.1
  # Pagesへテスト結果を公開
  publish-test-result:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v2
  # AWSへデプロイ
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-image
      - publish-test-result
    steps:
    - name: Pull Docker image from GitHub Packages
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker pull ghcr.io/${{ github.repository_owner }}/$APP_NAME:$APP_VERSION
    # AWS認証情報を設定
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    # ECRへログイン
    - name: login to AWS ECR
      run: aws ecr get-login-password --region ${{ env.AWS_REGION}} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{ env.AWS_REGION}}.amazonaws.com
    # イメージプッシュ
    - name: Build and Push Docker image to ECR
      run: |
        docker tag ghcr.io/${{ github.repository_owner }}/$APP_NAME:$APP_VERSION ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/consider-cicd:$APP_NAME-$APP_VERSION
        docker push ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/consider-cicd:$APP_NAME-$APP_VERSION
        
