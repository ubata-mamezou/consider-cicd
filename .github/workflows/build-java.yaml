# java21, maven
name: CI/CD java application

on:
  push:
    # 一旦、mainブランチへのpushをトリガーにして実行
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # コードをチェックアウト
      - uses: actions/checkout@v3
      # JDK をセットアップ
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      # Mavanリポジトリのキャッシュ
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # MavenにGitHub Packagesへの認証設定追加
      - name: Generate Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.GITHUB_TOKEN }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml
      # Mavenでビルドし、jarファイルを生成
      - name: Build with Maven
        run: |
          cd order
          mvn clean install
      # GitHub Packagesへjarファイルを公開
      - name: Publish to GitHub Packages
        run: |
          cd order
          mvn deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # イメージビルド（Docker）
      - name: Build Docker image
        run: |
          cd order
          docker build -t ghcr.io/${{ github.repository_owner }}/consider-cicd:${{ github.sha }} .
      # 脆弱性スキャン（Trivy）
      - name: Scan Docker image with Trivy
        run: |
          # Trivyのインストール
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.29.1/trivy_0.29.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.29.1_Linux-64bit.deb
        
          # Dockerイメージの脆弱性スキャン
          trivy image --no-progress ghcr.io/${{ github.repository_owner }}/consider-cicd:${{ github.sha }}
      # GitHub Packagesにコンテナイメージを公開
      - name: Publish Docker image to GitHub Packages
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/consider-cicd:${{ github.sha }}
      # クリーンアップ（オプション）
      - name: Remove Docker images
        run: |
          docker rmi ghcr.io/${{ github.repository_owner }}/consider-cicd:${{ github.sha }}     
