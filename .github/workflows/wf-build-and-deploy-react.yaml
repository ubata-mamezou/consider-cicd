# # Reactアプリケーションのビルド
# ## 前提とする言語など
# * React
# * TypeScript
# * Node.js
# * Vite
name: CI/CD React Application

env:
  APP_NAME: order-ui
  APP_VERSION: 0.0.1
  AWS_REGION: ap-northeast-1
  WORK_DIRECTORY: order-ui
  DIST_DIRECTORY: dist # ビルドリソースの生成されるフォルダー（ex. Node:dist）
  TEST_REPORT_DIRECTORY: test-result #WORK_DIRECTORYから見たパス
  NODE_VERSION: 20 # 使用するNode.jsのバージョン

on:
  workflow_dispatch: 
  push:
    branches: 
      - 'develop/**'
    paths: 
      - 'order-ui/**'
      - '.github/workflows/**' #ワークフロー実装中の一時的なトリガー

jobs:
  build:
    uses: ./.github/workflows/build-react-app.yaml
    with:
      # app-name: order-ui
      app-name: ${{ vars.APP_NAME_ORDER_UI }}
      app-version: 0.0.1
      work-directory: order-ui
      dist-directory: dist
      node-version: 20
      test-report-cache-key: test-report_order-ui
      build-artifacts-cache-key: artifact-dist-order-ui
      is-publish: true
  # テストレポートを公開
  publish-test-result:
    needs: build
    uses: ./.github/workflows/publish-report.yaml
    with:
      app-name: order-ui
      test-report-cached-key: test-report_order-ui
  # デプロイ(デプロイ先：AWS)
  # deploy:
  #   needs: build
  #   uses: ./.github/workflows/deploy-aws_dev.yaml
  #   secrets: inherit
  #   with:
  #     app-name: order-ui
  #     app-version: 0.0.1
  #     aws-region: ${{ vars.AWS_REGION }}
  #     aws-ecr-repository-name: consider-cicd
  #     ecs-cluster-name: consider-cicd-ecs
  #     ecs-service-name: consider-cicd-ecs-service_order-ui
  #     ecs-task-name: consider-cicd-ecs-task-order-ui
  #     env-variables: |
  #       {"name": "PORT", "value": "8082"}, 
  #       {"name": "TEST_ENV", "value": "dev"}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    ## 対象のアーティファクトをダウンロード
    - name: download artifact
      uses: actions/download-artifact@v4
      with:
        name: artifact-dist-order-ui
        path: ${{ env.WORK_DIRECTORY }}/${{ env.DIST_DIRECTORY }}
    - run: tree #debug
    ## AWS Credential情報を設定
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
    - name: Deploy to S3
      run: aws s3 sync ${{ env.DIST_DIRECTORY }} s3://${{ secrets.S3_BUCKET_NAME }} --delete
    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.DISTRIBUTION_ID }} \
          --paths "/*"