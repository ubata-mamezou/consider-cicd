# # AWSへのデプロイ(SSG)
# ## 前提とする言語、環境など
# * 静的サイト：S3+CloudFront
# ## 前提条件
# * デプロイ対象バージョンのアーティファクトをアップロードしていること
# * デプロイ先に必要な環境が構築されていること
#   * VPC、サブネットなどのネットワーク設定
#   * IAM：デプロイに必要なポリシーが設定されているユーザーが設定されていること
#   * S3、CloudFront：静的サイト
# * GitHub SecretsにIAMのCredential情報を設定済みであること
#   * IAMに必要なポリシー
#     * AmazonS3FullAccess：S3の操作に使用
#     * CloudFrontFullAccess：CloudFrontの操作に使用
#   * 設定値：当ワークフローのsecrets参照
name: deploy aws for frontend

on:
  workflow_call:
    inputs:
      aws-region:
        description: AWSリージョン
        required: true
        type: string
      work-directory:
        description: 作業ディレクトリ（ルート：.、サブディレクトリにあるアプリを対象とする場合：フォルダ名）
        required: true
        type: string
      dist-directory:
        description: ツールによるアーティファクトの参照先を吸収するための変数（ex. dist）
        required: false
        type: string
      build-artifacts-cached-key:
        description: キャッシュしたアーティファクトのキー名
        required: true
        type: string
      s3-bucket-name:
        description: S3バケット名
        required: true
        type: string
      distribution-id:
        description: ディストリビューションID
        required: true
        type: string
    secrets:
      aws-access-key-id:
        description: AWSアクセスキーID
        required: true
      aws-secret-access-key:
        description: AWSシークレットアクセスキー
        required: true
  
jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    steps:
      # デプロイ実行環境セットアップ
      ## 対象のアーティファクトをダウンロード
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifacts-cached-key }}
          path: ${{ inputs.work-directory }}/${{ inputs.dist-directory }}
      ## AWS Credential情報を設定
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      # デプロイ
      ## コンテンツの同期、不要リソースの削除(S3)
      - name: Deploy to S3
        run: aws s3 sync ${{ inputs.work-directory }}/${{ inputs.dist-directory }} s3://${{ inputs.s3-bucket-name }} --delete
      ## キャッシュ削除(CloudFront)
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ inputs.distribution-id }} \
            --paths "/*"
  